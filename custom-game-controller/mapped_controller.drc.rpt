Design Assistant report for mapped_controller
Wed Feb  9 17:58:54 2022
Quartus Prime Version 21.1.0 Build 842 10/21/2021 SJ Lite Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Design Assistant Summary
  3. Design Assistant Settings
  4. Critical Violations
  5. Medium Violations
  6. Information only Violations
  7. Design Assistant Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 2021  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.



+-------------------------------------------------------------------------+
; Design Assistant Summary                                                ;
+-----------------------------------+-------------------------------------+
; Design Assistant Status           ; Analyzed - Wed Feb  9 17:58:54 2022 ;
; Revision Name                     ; mapped_controller                   ;
; Top-level Entity Name             ; mapped_controller                   ;
; Family                            ; Cyclone IV E                        ;
; Total Critical Violations         ; 2                                   ;
; - Rule C101                       ; 2                                   ;
; Total High Violations             ; 0                                   ;
; Total Medium Violations           ; 5                                   ;
; - Rule C103                       ; 2                                   ;
; - Rule C104                       ; 1                                   ;
; - Rule C106                       ; 1                                   ;
; - Rule R102                       ; 1                                   ;
; Total Information only Violations ; 50                                  ;
; - Rule T102                       ; 50                                  ;
+-----------------------------------+-------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Design Assistant Settings                                                                                                                                                                ;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------+----+
; Option                                                                                                                                                               ; Setting      ; To ;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------+----+
; Design Assistant mode                                                                                                                                                ; Post-Fitting ;    ;
; Threshold value for clock net not mapped to clock spines rule                                                                                                        ; 25           ;    ;
; Minimum number of clock port feed by gated clocks                                                                                                                    ; 30           ;    ;
; Minimum number of node fan-out                                                                                                                                       ; 30           ;    ;
; Maximum number of nodes to report                                                                                                                                    ; 50           ;    ;
; Rule C101: Gated clock should be implemented according to the Intel FPGA standard scheme                                                                             ; On           ;    ;
; Rule C102: Logic cell should not be used to generate an inverted clock signal                                                                                        ; On           ;    ;
; Rule C103: Gated clock does not feed at least a pre-defined number of clock ports to effectively save power                                                          ; On           ;    ;
; Rule C104: Clock signal source should drive only clock input ports                                                                                                   ; On           ;    ;
; Rule C105: Clock signal should be a global signal                                                                                                                    ; On           ;    ;
; Rule C106: Clock signal source should not drive registers triggered by different clock edges                                                                         ; On           ;    ;
; Rule R101: Combinational logic used as a reset signal should be synchronized                                                                                         ; On           ;    ;
; Rule R102: External reset signals should be synchronized using two cascaded registers                                                                                ; On           ;    ;
; Rule R103: External reset signal should be correctly synchronized                                                                                                    ; On           ;    ;
; Rule R104: The reset signal that is generated in one clock domain and used in another clock domain should be correctly synchronized                                  ; On           ;    ;
; Rule R105: The reset signal that is generated in one clock domain and used in another clock domain should be synchronized                                            ; On           ;    ;
; Rule T101: Nodes with more than the specified number of fan-outs                                                                                                     ; On           ;    ;
; Rule T102: Top nodes with the highest number of fan-outs                                                                                                             ; On           ;    ;
; Rule A101: Design should not contain combinational loops                                                                                                             ; On           ;    ;
; Rule A102: Register output should not drive its own control signal directly or through combinational logic                                                           ; On           ;    ;
; Rule A103: Design should not contain delay chains                                                                                                                    ; On           ;    ;
; Rule A104: Design should not contain ripple clock structures                                                                                                         ; On           ;    ;
; Rule A105: Pulses should not be implemented asynchronously                                                                                                           ; On           ;    ;
; Rule A106: Multiple pulses should not be generated in design                                                                                                         ; On           ;    ;
; Rule A107: Design should not contain SR latches                                                                                                                      ; On           ;    ;
; Rule A108: Design should not contain latches                                                                                                                         ; On           ;    ;
; Rule S101: Output enable and input of the same tri-state node should not be driven by same signal source                                                             ; On           ;    ;
; Rule S102: Synchronous port and asynchronous port of the same register should not be driven by the same signal source                                                ; On           ;    ;
; Rule S103: More than one asynchronous port of a register should not be driven by the same signal source                                                              ; On           ;    ;
; Rule S104: Clock port and any other port of a register should not be driven by the same signal source                                                                ; On           ;    ;
; Rule D101: Data bits are not synchronized when transferred between asynchronous clock domains                                                                        ; On           ;    ;
; Rule D102: Multiple data bits that are transferred across asynchronous clock domains are synchronized, but not all bits may be aligned in the receiving clock domain ; On           ;    ;
; Rule D103: Data bits are not correctly synchronized when transferred between asynchronous clock domains                                                              ; On           ;    ;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------+----+


+--------------------------------------------------------------------------------------------------------------------------------------------------------+
; Critical Violations                                                                                                                                    ;
+------------------------------------------------------------------------------------------+-------------------------------------------------------------+
; Rule name                                                                                ; Name                                                        ;
+------------------------------------------------------------------------------------------+-------------------------------------------------------------+
; Rule C101: Gated clock should be implemented according to the Intel FPGA standard scheme ; custom_controller:CC0|LessThan2                             ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|buttons[0]                            ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|buttons[1]                            ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|buttons[2]                            ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|buttons[3]                            ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|buttons[4]                            ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|buttons[5]                            ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|buttons[6]                            ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|buttons[7]                            ;
; Rule C101: Gated clock should be implemented according to the Intel FPGA standard scheme ; rtl~0                                                       ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[0] ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[1] ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[2] ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[3] ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[4] ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[5] ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[6] ;
;  Gated clock destination node(s) list                                                    ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[7] ;
+------------------------------------------------------------------------------------------+-------------------------------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Medium Violations                                                                                                                                                            ;
+-------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------+
; Rule name                                                                                                   ; Name                                                           ;
+-------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------+
; Rule C103: Gated clock does not feed at least a pre-defined number of clock ports to effectively save power ; custom_controller:CC0|LessThan2                                ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|buttons[0]                               ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|buttons[1]                               ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|buttons[2]                               ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|buttons[3]                               ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|buttons[4]                               ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|buttons[5]                               ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|buttons[6]                               ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|buttons[7]                               ;
; Rule C103: Gated clock does not feed at least a pre-defined number of clock ports to effectively save power ; rtl~0                                                          ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[0]    ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[1]    ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[2]    ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[3]    ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[4]    ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[5]    ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[6]    ;
;  Gated clock destination node(s) list                                                                       ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[7]    ;
; Rule C104: Clock signal source should drive only clock input ports                                          ; custom_controller:CC0|LessThan2                                ;
;  Clock ports destination node(s) list                                                                       ; custom_controller:CC0|buttons[0]                               ;
;  Clock ports destination node(s) list                                                                       ; custom_controller:CC0|buttons[1]                               ;
;  Clock ports destination node(s) list                                                                       ; custom_controller:CC0|buttons[2]                               ;
;  Clock ports destination node(s) list                                                                       ; custom_controller:CC0|buttons[3]                               ;
;  Clock ports destination node(s) list                                                                       ; custom_controller:CC0|buttons[4]                               ;
;  Clock ports destination node(s) list                                                                       ; custom_controller:CC0|buttons[5]                               ;
;  Clock ports destination node(s) list                                                                       ; custom_controller:CC0|buttons[6]                               ;
;  Clock ports destination node(s) list                                                                       ; custom_controller:CC0|buttons[7]                               ;
;  Non-clock ports destination node(s) list                                                                   ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|Add0~0 ;
;  Non-clock ports destination node(s) list                                                                   ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|Add0~1 ;
; Rule C106: Clock signal source should not drive registers triggered by different clock edges                ; rtl~0                                                          ;
;  Positive edge destination node(s) list                                                                     ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[0]    ;
;  Positive edge destination node(s) list                                                                     ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[1]    ;
;  Positive edge destination node(s) list                                                                     ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[2]    ;
;  Positive edge destination node(s) list                                                                     ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[3]    ;
;  Positive edge destination node(s) list                                                                     ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[4]    ;
;  Positive edge destination node(s) list                                                                     ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[5]    ;
;  Positive edge destination node(s) list                                                                     ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[6]    ;
;  Positive edge destination node(s) list                                                                     ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[7]    ;
;  Negative edge destination node(s) list                                                                     ; custom_controller:CC0|buttons[0]                               ;
;  Negative edge destination node(s) list                                                                     ; custom_controller:CC0|buttons[1]                               ;
;  Negative edge destination node(s) list                                                                     ; custom_controller:CC0|buttons[2]                               ;
;  Negative edge destination node(s) list                                                                     ; custom_controller:CC0|buttons[3]                               ;
;  Negative edge destination node(s) list                                                                     ; custom_controller:CC0|buttons[4]                               ;
;  Negative edge destination node(s) list                                                                     ; custom_controller:CC0|buttons[5]                               ;
;  Negative edge destination node(s) list                                                                     ; custom_controller:CC0|buttons[6]                               ;
;  Negative edge destination node(s) list                                                                     ; custom_controller:CC0|buttons[7]                               ;
; Rule R102: External reset signals should be synchronized using two cascaded registers                       ; KEY[0]                                                         ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|buttons[0]                               ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[0]    ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|buttons[1]                               ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|buttons[2]                               ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|buttons[3]                               ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|buttons[4]                               ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|buttons[5]                               ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|buttons[6]                               ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|buttons[7]                               ;
;  Reset signal destination node(s) list                                                                      ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[0] ;
+-------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------+


+-------------------------------------------------------------------------------------------------------------------------------------------+
; Information only Violations                                                                                                               ;
+----------------------------------------------------------+----------------------------------------------------------------------+---------+
; Rule name                                                ; Name                                                                 ; Fan-Out ;
+----------------------------------------------------------+----------------------------------------------------------------------+---------+
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|Equal1~6           ; 13      ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|LessThan2~clkctrl                              ; 8       ;
; Rule T102: Top nodes with the highest number of fan-outs ; rtl~0clkctrl                                                         ; 8       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|Add0~16      ; 8       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[9]       ; 5       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[12]      ; 4       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[8]       ; 4       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[10]      ; 4       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[11]      ; 4       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[5]       ; 4       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[1] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[7] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[1]       ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[2] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[8] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|Equal1~2     ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; CLOCK_50~inputclkctrl                                                ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[18]      ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[0] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[2]       ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[7]       ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[3]       ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|LessThan2~1                                    ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[16]      ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[6]       ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[4]       ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[17]      ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[19]      ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[14]      ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[4] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[6] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[0]       ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[3] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[5] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[15]      ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[9] ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[13]      ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|LessThan0~4                                    ; 3       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[6]          ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[0]          ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|LessThan0~2                                    ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|LessThan0~3                                    ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[5]          ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|LessThan2~3                                    ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|LessThan2                                      ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[2]          ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_counter:SYSTEM_COUNTER|Equal1~0           ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; rtl~0                                                                ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[3]          ; 2       ;
; Rule T102: Top nodes with the highest number of fan-outs ; custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[1]          ; 2       ;
+----------------------------------------------------------+----------------------------------------------------------------------+---------+


+---------------------------+
; Design Assistant Messages ;
+---------------------------+
Info: *******************************************************************
Info: Running Quartus Prime Design Assistant
    Info: Version 21.1.0 Build 842 10/21/2021 SJ Lite Edition
    Info: Copyright (C) 2021  Intel Corporation. All rights reserved.
    Info: Your use of Intel Corporation's design tools, logic functions 
    Info: and other software and tools, and any partner logic 
    Info: functions, and any output files from any of the foregoing 
    Info: (including device programming or simulation files), and any 
    Info: associated documentation or information are expressly subject 
    Info: to the terms and conditions of the Intel Program License 
    Info: Subscription Agreement, the Intel Quartus Prime License Agreement,
    Info: the Intel FPGA IP License Agreement, or other applicable license
    Info: agreement, including, without limitation, that your use is for
    Info: the sole purpose of programming logic devices manufactured by
    Info: Intel and sold by Intel or its authorized distributors.  Please
    Info: refer to the applicable agreement for further details, at
    Info: https://fpgasoftware.intel.com/eula.
    Info: Processing started: Wed Feb  9 17:58:53 2022
Info: Command: quartus_drc mapped_controller -c mapped_controller
Info (332104): Reading SDC File: 'mapped_controller.sdc'
Warning (332174): Ignored filter at mapped_controller.sdc(1): CLK could not be matched with a port File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 1
Warning (332049): Ignored create_clock at mapped_controller.sdc(1): Argument <targets> is an empty collection File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 1
    Info (332050): create_clock -name CLK [get_ports {CLK}] -period 100MHz File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 1
Warning (332174): Ignored filter at mapped_controller.sdc(3): CPUCLK|q could not be matched with a pin File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 3
Critical Warning (332049): Ignored create_generated_clock at mapped_controller.sdc(3): Argument <targets> is an empty collection File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 3
    Info (332050): create_generated_clock -divide_by 2 -source [get_ports CLK] -name CPUCLK [get_pins CPUCLK|q] File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 3
Warning (332049): Ignored create_generated_clock at mapped_controller.sdc(3): Argument -source is an empty collection File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 3
Warning (332174): Ignored filter at mapped_controller.sdc(4): system:SYS|CPUCLK|q could not be matched with a pin File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 4
Critical Warning (332049): Ignored create_generated_clock at mapped_controller.sdc(4): Argument <targets> is an empty collection File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 4
    Info (332050): create_generated_clock -divide_by 2 -source [get_ports CLOCK_50] -name CPUCLK [get_pins system:SYS|CPUCLK|q] File: /home/jared/496/custom-game-controller/mapped_controller.sdc Line: 4
Warning (332060): Node: custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[10] was determined to be a clock but was found without an associated clock assignment.
    Info (13166): Register custom_controller:CC0|buttons[0] is being clocked by custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[10]
Warning (332060): Node: custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[0] was determined to be a clock but was found without an associated clock assignment.
    Info (13166): Register custom_controller:CC0|flex_stp_sr:SHIFT_REG|parallel_out[0] is being clocked by custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[0]
Critical Warning (332168): The following clock transfers have no clock uncertainty assignment. For more accurate results, apply clock uncertainty assignments or use the derive_clock_uncertainty command.
    Critical Warning (332169): From CLK_50 (Rise) to CLK_50 (Rise) (setup and hold)
Critical Warning (308019): (Critical) Rule C101: Gated clock should be implemented according to the Intel FPGA standard scheme. Found 2 node(s) related to this rule.
    Critical Warning (308012): Node  "custom_controller:CC0|LessThan2" File: /home/jared/496/custom-game-controller/source/custom_controller.sv Line: 30
    Critical Warning (308012): Node  "rtl~0"
Warning (308017): (Medium) Rule C103: Gated clock does not feed at least a pre-defined number of clock ports to effectively save power. (Value defined:30). Found 2 node(s) related to this rule.
    Warning (308010): Node  "custom_controller:CC0|LessThan2" File: /home/jared/496/custom-game-controller/source/custom_controller.sv Line: 30
    Warning (308010): Node  "rtl~0"
Warning (308040): (Medium) Rule C104: Clock signal source should drive only clock input ports. Found 1 nodes related to this rule.
    Warning (308010): Node  "custom_controller:CC0|LessThan2" File: /home/jared/496/custom-game-controller/source/custom_controller.sv Line: 30
Warning (308022): (Medium) Rule C106: Clock signal source should not drive registers triggered by different clock edges. Found 1 node(s) related to this rule.
    Warning (308010): Node  "rtl~0"
Warning (308023): (Medium) Rule R102: External reset signals should be synchronized using two cascaded registers. Found 1 node(s) related to this rule.
    Warning (308010): Node  "KEY[0]" File: /home/jared/496/custom-game-controller/source/mapped_controller.sv Line: 13
Info (308044): (Information) Rule T102: Top nodes with the highest number of fan-outs. (Value defined:50). Found 50 node(s) with highest fan-out.
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|Equal1~6" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 53
    Info (308011): Node  "custom_controller:CC0|LessThan2~clkctrl" File: /home/jared/496/custom-game-controller/source/custom_controller.sv Line: 30
    Info (308011): Node  "rtl~0clkctrl"
    Info (308011): Node  "custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|Add0~16" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 46
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[9]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[12]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[8]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[10]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[11]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[5]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[1]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[7]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[1]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[2]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[8]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|Equal1~2" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 53
    Info (308011): Node  "CLOCK_50~inputclkctrl" File: /home/jared/496/custom-game-controller/source/mapped_controller.sv Line: 12
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[18]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[0]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[2]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[7]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[3]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|LessThan2~1" File: /home/jared/496/custom-game-controller/source/custom_controller.sv Line: 30
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[16]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[6]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[4]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[17]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[19]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:SYSTEM_COUNTER|count_out[14]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308011): Node  "custom_controller:CC0|flex_counter:PULSE_LENGTH_COUNTER|count_out[4]" File: /home/jared/496/custom-game-controller/source/flex_counter.sv Line: 32
    Info (308002): Truncated list of Design Assistant messages to 30 messages. Go to sections under Design Assistant section of Compilation Report for complete lists of Design Assistant messages generated.
Info (308007): Design Assistant information: finished post-fitting analysis of current design -- generated 50 information messages and 7 warning messages
Info: Quartus Prime Design Assistant was successful. 0 errors, 23 warnings
    Info: Peak virtual memory: 597 megabytes
    Info: Processing ended: Wed Feb  9 17:58:54 2022
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:00


